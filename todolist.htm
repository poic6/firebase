
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- CSS only -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor" crossorigin="anonymous">
    <!-- JavaScript Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/js/bootstrap.bundle.min.js" integrity="sha384-pprn3073KE6tl6bjs2QrFaJGz5/SUsLqktiwsUTF55Jfv3qYSDhgCecCxMW52nD2" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
    <title>Document</title>
    <script type="module">
        import { initializeApp } from "https://www.gstatic.com/firebasejs/9.9.2/firebase-app.js";
        import { getDatabase, ref, set, get, child, onValue, push, update, remove } from "https://www.gstatic.com/firebasejs/9.9.2/firebase-database.js";
        
        const firebaseConfig = {
        apiKey: "AIzaSyBK8cxxcTnzM4KUed2-2_RYaYmao_M0dXA",
        authDomain: "project-test-70f47.firebaseapp.com",
        databaseURL: "https://project-test-70f47-default-rtdb.firebaseio.com",
        projectId: "project-test-70f47",
        storageBucket: "project-test-70f47.appspot.com",
        messagingSenderId: "1074186125283",
        appId: "1:1074186125283:web:296b5c9eaca5cb0baaead6"
        };
        const app = initializeApp(firebaseConfig);
        const database = getDatabase(app);
        // set일 때 설정//
        /*
        onValue(ref(database), (snapshot) => {
            snapshot.forEach((childSnapshot)=>{
                const childKey = childSnapshot.key;
                const childData = childSnapshot.val();
                document.getElementById('todo_list').innerHTML = childData;
            })
        });
        */
        onValue(ref(database, '/'), (snapshot) => {
            document.getElementById('todo_list').innerHTML = "";

            snapshot.forEach((childSnapshot)=>{
                const childKey = childSnapshot.key;
                const childData = childSnapshot.val();

                var div = document.createElement('div');
                div.setAttribute('class', 'card card-body mt-2');
                div.setAttribute('id', 'div_'+childKey);
                document.getElementById('todo_list').appendChild(div);

                var todospan = document.createElement('span');
                var todospanText = document.createTextNode(childData.todo);
                todospan.appendChild(todospanText);
                todospan.setAttribute('class', 'fs-5');
                todospan.setAttribute('id', 'span_'+childKey);
                document.getElementById('div_'+childKey).appendChild(todospan);

                var todoBtn = document.createElement('button');
                todoBtn.setAttribute('class', 'btn btn-primary float-end');
                todoBtn.setAttribute('id', childKey);
                todoBtn.addEventListener("click", onDeleteClick);
                document.getElementById('span_'+childKey).appendChild(todoBtn);

                document.getElementById(childKey).innerHTML = '<i class="bi bi-trash"></i> 삭제';
            })
        });

        // set은 고정된 자리에 업데이트
        /*
        submit.addEventListener('click', (e)=>{
            set(ref(getDatabase(app), '/'), {
                todo: document.getElementById('list').value
            });
        });
        */

       // push는 추가
       submit.addEventListener('click', (e)=>{
            add_data();
        });
        const add_data = ()=>{
            if(document.getElementById('list').value){
                const postRef = ref(database, '/');
                const postId = push(postRef);
                //console.log(postId.key);
                set(postId, {
                    todo : document.getElementById('list').value
                });
            }
            else{
                alert('할 일을 입력하세요.');
            }
            go_input();
        }

        list.addEventListener('keypress', (e)=>{
            if(e.keyCode===13){
                add_data();
            }
        })
        
        const onDeleteClick = (e)=>{
            const targetId = e.target.id;
            remove(ref(database, '/'+targetId));
            go_input();
        }

        const go_input = ()=>{
            document.getElementById('list').value="";
            document.getElementById('list').focus();
        }
    </script>
</head>

<body>
    <div class="container mt-5">
        <h3>todo_list</h3>
        <div id="todo_list"></div>
        <div class="mt-2">
            <input type="text" id="list" class="form-control" autofocus="autofocus" placeholder="할 일을 입력하세요.">
        </div>
        <div class="mt-2">
            <button type="submit" id="submit" class="btn btn-primary">입력하기</button>
        </div>
    </div>
</body>
</html>