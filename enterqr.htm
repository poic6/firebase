<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- CSS only -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor" crossorigin="anonymous">
    <!-- JavaScript Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/js/bootstrap.bundle.min.js" integrity="sha384-pprn3073KE6tl6bjs2QrFaJGz5/SUsLqktiwsUTF55Jfv3qYSDhgCecCxMW52nD2" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">
    <title>Document</title>
    <script type="module">
        import { initializeApp } from "https://www.gstatic.com/firebasejs/9.9.2/firebase-app.js";
        import { getDatabase, ref, set, get, child, onValue, push, update, remove, query, equalTo, orderByChild } from "https://www.gstatic.com/firebasejs/9.9.2/firebase-database.js";
        
        const firebaseConfig = {
            apiKey: "AIzaSyDKKJICj33GNMFA-JNzRRakmogvm-bU7yc",
            authDomain: "reservation-8471e.firebaseapp.com",
            databaseURL: "https://reservation-8471e-default-rtdb.firebaseio.com",
            projectId: "reservation-8471e",
            storageBucket: "reservation-8471e.appspot.com",
            messagingSenderId: "884786031769",
            appId: "1:884786031769:web:5db15a07fbbe25701b9c08"
        };
        const app = initializeApp(firebaseConfig);
        const database = getDatabase(app);

        function getParameter(name){
            name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
                results = regex.exec(location.search);
            return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
        }
        
        var idcode = getParameter("id");
        if(idcode){
            const que = query(ref(database, "/"), orderByChild('id'), equalTo(idcode));
            get(que).then((snapshot)=>{
                if(snapshot.exists()){
                    var reservation = [];
                    snapshot.forEach(childSnapshot=>{
                        reservation.push(childSnapshot.val());
                    });
                    if(reservation[0].useCode===1){
                        document.getElementById('result').innerHTML = "이미 사용한 QR코드 입니다.";
                    }
                    else{
                        let today = new Date();
                        let today_data = today.toLocaleString();

                        update(ref(database, '/'+Object.keys(snapshot.val())[0]), {
                            useCode: 1,
                            useTime: today_data
                        });
                        document.getElementById('result').innerHTML = "<h1 class='text-primary'>"+reservation[0].name+"님 입장하세요</h1>";
                    }
                }
                else{
                    alert('입력한 정보와 일치하는 예약내역이 없습니다.');
                }
            });
        }
        else{
            document.getElementById('result').innerHTML = "처리 중 오류가 발생했습니다.";
        }
    </script>
</head>

<body>
    <div id="result"></div>
</body>
</html>